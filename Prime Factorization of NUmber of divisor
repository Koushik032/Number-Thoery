///   ***   ---   |||         In the name of VOGOBAN        |||   ---   ***   ///



#include<bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);


ll gcd ( ll a, ll b )
{
    return __gcd ( a, b );
}
ll lcm ( ll a, ll b )
{
    return a * ( b / gcd ( a, b ) );
}

const int mx = 1e5 + 123;
bitset< mx > isprimes;
vector< int > primes;

void seivegen( int n )
{
    for ( int i = 3; i <= n; i+=2 )
    {
        isprimes[i] = 1;
    }

    for ( int i = 3; i <= sqrt(n); i+= 2 )
    {
        if ( isprimes[i] )
        {
        for ( int j = i*i; j <= n; j+= i )
        {
            isprimes[j] = 0;
        }
        }
    }

    primes.PB(2);
    isprimes[2] = 1;

    for ( int i = 3; i <= n; i+=2 )
    {
        if ( isprimes[i] )
        {
            primes.PB(i);
        }
    }
}

int nod( int n )
{
    int nod = 1;

    for ( auto p : primes )
    {
        if ( 1ll * p *p > n )break;
        int cnt = 0;
        if ( n % p == 0 )
        {
            while ( n % p == 0 )
            {
                n/= p;
                cnt++;
            }

            cnt++;
            nod *= cnt;
        }
    }

    if ( n > 1 )nod*= 2;

    return nod;
}

int main()
{
    int lim = 1e5;
    seivegen(lim);
    
    int n = ;
    int ans = 0;

    for ( int i = 1; i <= n; i++ )
    {
        ans += nod(i);
    }

    cout << ans << endl;

    return 0;
}

